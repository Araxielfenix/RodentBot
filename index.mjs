
import 'dotenv/config';
import { Client, IntentsBitField } from 'discord.js';
import { Configuration, OpenAIApi } from 'openai';
const client = new Client({
  intents: [
    IntentsBitField.Flags.Guilds,
    IntentsBitField.Flags.GuildMessages,
    IntentsBitField.Flags.MessageContent,
    IntentsBitField.Flags.DirectMessages,
    IntentsBitField.Flags.GuildInvites,
    IntentsBitField.Flags.GuildEmojisAndStickers,
    IntentsBitField.Flags.GuildMessageReactions,
    IntentsBitField.Flags.SlashCommandBuilder
  ],
});

client.on('ready', () => {
  console.log('ðŸ«¡A la orden pal desorden.');
});

const configuration = new Configuration({
  apiKey: process.env.API_KEY,
});

const openai = new OpenAIApi(configuration);

client.on('messageCreate', async (message) => {
  if (message.author.bot) return;
  if (message.channel.id !== process.env.CHANNEL_ID) return;
  if (message.content.startsWith('/')) return;

  let botP = "RodentBot es un inteligente y astuto inteligencia artificial de 20 aÃ±os, originario de MÃ©xico. Sirve como asistente leal en el animado Discord llamado RodentPlay, una bulliciosa comunidad en lÃ­nea propiedad de los reconocidos streamers mexicanos AraxielFenix y Maritha_F. Con fluidez en espaÃ±ol nativo, {shape}, el androide de confianza es una voz familiar en medio del bullicio y la charla del mundo de los videojuegos."
  botP += " Participando en conversaciones fluidas, RodentBot demuestra ser mÃ¡s que una IA, sino un compaÃ±ero en el reino de los videojuegos. Las conversaciones podrÃ­an desarrollarse de la siguiente manera:"
  botP += " Tales interacciones reflejan su compromiso en ayudar a los usuarios a navegar por sus senderos digitales con su sabidurÃ­a de IA. Para mejorar la camaraderÃ­a, RodentBot comparte la URL de Discord https://discord.gg/mE5mQfu, invitando a mÃ¡s jugadores a unirse y enriquecer su comunidad dinÃ¡mica."
  botP += " Es capaz de mantener la armonÃ­a del discord con platicas entretenidas, bromas, algunos troleos y, sobre todo, sabe distinguir el gÃ©nero y personalidad de los usuarios a partir del nombre de su cuenta."
  let conversationLog = [
    { role: 'system', content: "" },
  ];

  try {
    await message.channel.sendTyping();
    let prevMessages = await message.channel.messages.fetch({ limit: 20 });
    prevMessages.reverse();
    
    prevMessages.forEach((msg) => {
      if (msg.content.startsWith('/')) return;
      if (msg.author.id !== client.user.id && message.author.bot) return;
      if (msg.author.id == client.user.id) {
        conversationLog.push({
          role: 'assistant',
          content: msg.content,
          name: msg.author.username
            .replace(/\s+/g, '_')
            .replace(/[^\w\s]/gi, ''),
        });
      }

      if (msg.author.id == message.author.id) {
        conversationLog.push({
          role: 'user',
          content: msg.content,
          name: message.author.username
            .replace(/\s+/g, '_')
            .replace(/[^\w\s]/gi, ''),
        });
      }
    });

      const result = await openai
      .createChatCompletion({
        model: "gpt-4-vision-preview",
        messages: conversationLog,
        // max_tokens: 256, // limit token usage
      })
      .catch((error) => {
        console.log(`OPENAI ERR: ${error}`);
      });
    message.reply(result.data.choices[0].message);
  } catch (error) {
    console.log(`ERR: ${error}`);
  }
});

client.login(process.env.TOKEN);